<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkedBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAABJZJREFUaEPt
        ltlvE1cUh/3Sl/4XrdRKfakqVa3IZicpdhIkUBsoKt2gi0r2BOjCVuiivgIpqG2ALMrWIIIiWXacxFs2
        7HFi4jWLEztx4gVMHSBLScjaM5fj6I49gdCCTaX5pCPFd34z9zs313csEhAQEBAQEHgKmG/d2HPRXtW4
        srbyAg7xoh3V7zmp+KFxeXX5kbm4AvK78zRFy1+pC9Z/t1U0b9aE1qXfnXJWsrztTOr6Ufnx5ueiCVo+
        Uhftl5vw8ga0fKROKE/H5OLKQMiSm68pWqLlD6oLV0w3+z/ACEE/qs9NOSdZouRXk8+KV9pHNJxcXLHf
        du4o0JQsPk6+12PITivPWKTk1xMvH3bm8MoH+/ZhhGAYN8h45Yc7Eiov5ZNngn0fYoQA8lmbyHNyccUZ
        dooLtCULMfI3TR9hhGCcMGaJyzMXouVVw+2cXFwB+Wxe+SDzMUYIIJ/NJ9862M7JxRVneCiLT94QMH2C
        EYLRy/CufOuQKnErPxgekvHIrxoCzKcYITATjCxaPulM2mqrU7UXI/EH5KW88kHjfowQmAmTlE9e4VS+
        i5H4w8oXakvv0/JQa12+7oMYIbDykvLM+7Q81FqLtSVxR+Xo9Ji4SFs2HyM/1ZWHEYLFbxWn/7p9Plr+
        mrXlyb+w1Y7aN+AsfhE/bspPbb/UPOosdt0ZSyvWHZqLlu/0dedjhDDgs6ZlnJfO8cgfwMjWqXRUfwaT
        yGF/VsCr/BUcjuFH1c+17ETkhcLzKh+7O5bKJ6/zdRVghGDx2VL55K9ar3FyWwJWvhgm6cfJZvM1Jb2W
        kO0lvLwBu/L0hKnn0h90u3t24WXRyLRLwrttovb8gM8i4ds2sOc5uS0DJ0IGrLwJJpvBSeehiUFbyP4y
        RghwIuyHk4Ez8cMmene677q3wcrP4v0b8rqpzkK8nWAN2FMyz0tn6WdAsSvPyT0x1wOGXGiij5qcbcJt
        u21PwggBmjgATXAEZJd2LBVqSqdZYep+kNcX4W2ETeUtVzm5f02P35AOTYxREgtwDAaGwyNvY4Qgdyg+
        jzSRWSFb/7ItL5In4mzpJnXFGCfYAo5kPvkrlmZO7j/T478ugyaClNDfRdrSIOzvZIwQ5A75F9v/yJmN
        kmdrsW2i41uMEewBexKP/HptfwMn99To8fXuBZEAJTUHTfzlmh59CyMizz3P6/CGdVAZUrn17y/dmBpI
        x9hD+QuymRh5U/13GHk2dPt79oGQj5KbhRMmBC+oV70zk6+VdR5xwhjnN/2uulwix54w7Atq+NbIm9Lf
        cu5Ey9eY6o7iNM8WtVeXD2J+SjJUqj9sh7LA3w+ocd/Ouvc4ou9cyLrHFj3GVn1/wzf4+PigntQWsoKU
        bHR5lJ62Y03mpjIQjFltuqqZ2uP42Pii9mpKQHQySpwtl3JcdQJjokbzlUMgyvlFGalqpmYjlxA6JtRs
        E/R/YlzpUcVsh3rzn0dAeIWWr2JqTuLlxNLmVR8GcfZ3TlAxrjyGwzHUmxu+jshfZqq+x+HnA7lbcUru
        UZzGj5tSaaw+dclY+dicgICAgICAwP8bkegfxox3cdGGUPIAAAAASUVORK5CYII=
</value>
  </data>
</root>